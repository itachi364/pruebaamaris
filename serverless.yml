service: pruebaamaris
frameworkVersion: '4'

provider:
  name: aws
  runtime: java17
  region: us-east-1
  memorySize: 1024
  timeout: 30
  environment:
    SKIP_INIT: "false"
    JAVA_TOOL_OPTIONS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:Scan
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:us-east-1:293210010085:table/Funds
            - arn:aws:dynamodb:us-east-1:293210010085:table/UserBalance
            - arn:aws:dynamodb:us-east-1:293210010085:table/Transactions

package:
  artifact: target/pruebaamaris-lambda.jar

functions:
  api:
    handler: com.msvanegasg.pruebaamaris.StreamLambdaHandler
    events:
      - http:
          path: /{proxy+}
          method: ANY

params:
  default:
    createTables: true

custom:
  createTables: ${param:createTables}

resources:
  Parameters:
    CreateTables:
      Type: String
      Default: "true"
      AllowedValues:
        - "true"
        - "false"

  Conditions:
    CreateTablesCondition: !Equals [ !Ref CreateTables, "true" ]

  Resources:
    FundsTable:
      Condition: CreateTablesCondition
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Funds
        AttributeDefinitions:
          - AttributeName: fundId
            AttributeType: S
        KeySchema:
          - AttributeName: fundId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    UserBalanceTable:
      Condition: CreateTablesCondition
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UserBalance
        AttributeDefinitions:
          - AttributeName: balanceId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: balanceId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: userId-index
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    TransactionsTable:
      Condition: CreateTablesCondition
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Transactions
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: transactionId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: transactionId
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: userId-index
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

  Outputs:
    FundsTableName:
      Description: Nombre de la tabla de fondos
      Value:
        Ref: FundsTable
      Condition: CreateTablesCondition

    UserBalanceTableName:
      Description: Nombre de la tabla de balance del usuario
      Value:
        Ref: UserBalanceTable
      Condition: CreateTablesCondition

    TransactionsTableName:
      Description: Nombre de la tabla de transacciones
      Value:
        Ref: TransactionsTable
      Condition: CreateTablesCondition
